{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useServerPosts = count => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(`/server/posts?count=${count}`);\n        const data = await response.json();\n        setPosts(data.posts);\n      } catch (error) {\n        console.error('Ошибка при получении постов:', error);\n      }\n    };\n    fetchPosts();\n  }, [count]);\n  return posts;\n};\n_s(useServerPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\nexport default useServerPosts;","map":{"version":3,"names":["useState","useEffect","useServerPosts","count","_s","posts","setPosts","fetchPosts","response","fetch","data","json","error","console"],"sources":["/Users/nelly/localhost/react/client/src/hooks/useServerGoods.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useServerPosts = (count) => {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const response = await fetch(`/server/posts?count=${count}`);\n                const data = await response.json();\n                setPosts(data.posts);\n            } catch (error) {\n                console.error('Ошибка при получении постов:', error);\n            }\n        };\n\n        fetchPosts();\n    }, [count]);\n\n    return posts;\n}\n\nexport default useServerPosts;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uBAAsBN,KAAM,EAAC,CAAC;QAC5D,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,QAAQ,CAACI,IAAI,CAACL,KAAK,CAAC;MACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAEDL,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,OAAOE,KAAK;AAChB,CAAC;AAAAD,EAAA,CAlBKF,cAAc;AAoBpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}